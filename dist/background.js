(()=>{"use strict";var e=function(e,t,r,n){return new(r||(r=Promise))((function(o,s){function c(e){try{i(n.next(e))}catch(e){s(e)}}function l(e){try{i(n.throw(e))}catch(e){s(e)}}function i(e){var t;e.done?o(e.value):(t=e.value,t instanceof r?t:new r((function(e){e(t)}))).then(c,l)}i((n=n.apply(e,t||[])).next())}))};const t=()=>e(void 0,void 0,void 0,(function*(){console.log("helllllllllllll");const t=yield(r="/voyager/api/me",n={method:"GET"},e(void 0,void 0,void 0,(function*(){const e=yield(t="csrf_token",new Promise(((e,r)=>{chrome.storage.local.get([t],(r=>{r[t]?e(r[t]):e(null)}))})));var t;return e?yield fetch(`https://www.linkedin.com${r}`,Object.assign(Object.assign({},n),{headers:Object.assign(Object.assign({},n.headers),{"csrf-token":e})})).then((e=>{if(e.status>300)throw new Error(`error_${e.status}`);return e.json()})).catch((e=>{if(e instanceof Error){const t={message:e.message,stack:e.stack};console.error("Error occurred while calling LinkedIn API:",t)}else console.error("Error occurred while calling LinkedIn API:",JSON.stringify(e,null,2));if(e.message.startsWith("error_")){const[,t]=e.message.split("_");return{error:!0,code:Number(t)}}return null})):null})));var r,n;console.log("LinkedIn Profile Data:",t)}));chrome.runtime.onInstalled.addListener((function(e){chrome.storage.local.set({BD_Host:"https://localhost:3000"}),chrome.alarms.create("ALARAMS_ON",{periodInMinutes:1}),chrome.tabs.query({},(e=>{chrome.storage.local.get("BD_Host",(t=>{const r=t.BD_Host||"https://localhost:3000",n=e.filter((e=>e.url.includes("https://www.linkedin.com"))),o=e.filter((e=>e.url.includes(r)));if(n.length>0){const e=n[0];chrome.scripting.executeScript({target:{tabId:e.id},files:["/content_scripts/linkedin.js"]})}else chrome.tabs.create({url:"https://www.linkedin.com"});if(o.length>0){const e=o[0];chrome.scripting.executeScript({target:{tabId:e.id},files:["/content_scripts/bd.js"]})}}))})),"install"==e.reason&&(chrome.storage.local.clear(),t()),"update"==e.reason&&t()})),chrome.alarms.onAlarm.addListener((e=>{"ALARAMS_ON"===e.name&&t()})),chrome.runtime.onMessageExternal.addListener(((e,t,r)=>{const{type:n}=e;switch(n){case"MESSAGE":return r({signal:!0});case"AUTHENTICATION_LOGOUT":new Promise((e=>{chrome.storage.local.remove("AUTH_TOKEN",(()=>{e(!0)}))}))}}))})();